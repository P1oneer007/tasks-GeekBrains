<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Avalonia.Win32</name>
    </assembly>
    <members>
        <member name="M:Avalonia.Win32.DirectX.DxgiRenderTarget.BeginDrawCore">
            <inheritdoc />
        </member>
        <member name="T:Avalonia.Win32.Input.Imm32InputMethod">
            <summary>
            A Windows input method editor based on Windows Input Method Manager (IMM32).
            </summary>
        </member>
        <member name="M:Avalonia.Win32.Input.KeyInterop.IsExtended(System.Int32)">
            <summary>
            Indicates whether the key is an extended key, such as the right-hand ALT and CTRL keys.
            According to https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-keydown.
            </summary>
        </member>
        <member name="M:Avalonia.Win32.Interop.TaskBarList.MarkFullscreen(System.IntPtr,System.Boolean)">
            <summary>
            Ported from https://github.com/chromium/chromium/blob/master/ui/views/win/fullscreen_handler.cc
            </summary>
            <param name="hwnd">The window handle.</param>
            <param name="fullscreen">Fullscreen state.</param>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.GCS.GCS_COMPATTR">
            <summary>Retrieve or update the attribute of the composition string.</summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.GCS.GCS_COMPCLAUSE">
            <summary>Retrieve or update clause information of the composition string.</summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.GCS.GCS_COMPREADATTR">
            <summary>Retrieve or update the attributes of the reading string of the current composition.</summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.GCS.GCS_COMPREADCLAUSE">
            <summary>Retrieve or update the clause information of the reading string of the composition string.</summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.GCS.GCS_COMPREADSTR">
            <summary>Retrieve or update the reading string of the current composition.</summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.GCS.GCS_COMPSTR">
            <summary>Retrieve or update the current composition string.</summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.GCS.GCS_CURSORPOS">
            <summary>Retrieve or update the cursor position in composition string.</summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.GCS.GCS_DELTASTART">
            <summary>Retrieve or update the starting position of any changes in composition string.</summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.GCS.GCS_RESULTCLAUSE">
            <summary>Retrieve or update clause information of the result string.</summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.GCS.GCS_RESULTREADCLAUSE">
            <summary>Retrieve or update clause information of the reading string.</summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.GCS.GCS_RESULTREADSTR">
            <summary>Retrieve or update the reading string.</summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.GCS.GCS_RESULTSTR">
            <summary>Retrieve or update the string of the composition result.</summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.ClipboardFormat.CF_TEXT">
            <summary>
            Text format. Each line ends with a carriage return/linefeed (CR-LF) combination. A null character signals the end of the data. Use this format for ANSI text.
            </summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.ClipboardFormat.CF_BITMAP">
            <summary>
            A handle to a bitmap
            </summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.ClipboardFormat.CF_DIB">
            <summary>
            A memory object containing a BITMAPINFO structure followed by the bitmap bits.
            </summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.ClipboardFormat.CF_UNICODETEXT">
            <summary>
            Unicode text format. Each line ends with a carriage return/linefeed (CR-LF) combination. A null character signals the end of the data.
            </summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.ClipboardFormat.CF_HDROP">
            <summary>
            A handle to type HDROP that identifies a list of files. 
            </summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.WINDOWPLACEMENT.Length">
            <summary>
            The length of the structure, in bytes. Before calling the GetWindowPlacement or SetWindowPlacement functions, set this member to sizeof(WINDOWPLACEMENT).
            <para>
            GetWindowPlacement and SetWindowPlacement fail if this member is not set correctly.
            </para>
            </summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.WINDOWPLACEMENT.Flags">
            <summary>
            Specifies flags that control the position of the minimized window and the method by which the window is restored.
            </summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.WINDOWPLACEMENT.ShowCmd">
            <summary>
            The current show state of the window.
            </summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.WINDOWPLACEMENT.MinPosition">
            <summary>
            The coordinates of the window's upper-left corner when the window is minimized.
            </summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.WINDOWPLACEMENT.MaxPosition">
            <summary>
            The coordinates of the window's upper-left corner when the window is maximized.
            </summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.WINDOWPLACEMENT.NormalPosition">
            <summary>
            The window's coordinates when the window is in the restored position.
            </summary>
        </member>
        <member name="P:Avalonia.Win32.Interop.UnmanagedMethods.WINDOWPLACEMENT.Default">
            <summary>
            Gets the default (empty) value.
            </summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.TouchInputFlags.TOUCHEVENTF_MOVE">
            <summary>
            Movement has occurred. Cannot be combined with TOUCHEVENTF_DOWN.
            </summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.TouchInputFlags.TOUCHEVENTF_DOWN">
            <summary>
            The corresponding touch point was established through a new contact. Cannot be combined with TOUCHEVENTF_MOVE or TOUCHEVENTF_UP.
            </summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.TouchInputFlags.TOUCHEVENTF_UP">
            <summary>
            A touch point was removed.
            </summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.TouchInputFlags.TOUCHEVENTF_INRANGE">
            <summary>
            A touch point is in range. This flag is used to enable touch hover support on compatible hardware. Applications that do not want support for hover can ignore this flag.
            </summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.TouchInputFlags.TOUCHEVENTF_PRIMARY">
            <summary>
            Indicates that this TOUCHINPUT structure corresponds to a primary contact point. See the following text for more information on primary touch points.
            </summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.TouchInputFlags.TOUCHEVENTF_NOCOALESCE">
            <summary>
            When received using GetTouchInputInfo, this input was not coalesced.
            </summary>
        </member>
        <member name="F:Avalonia.Win32.Interop.UnmanagedMethods.TouchInputFlags.TOUCHEVENTF_PALM">
            <summary>
            The touch event came from the user's palm.
            </summary>
        </member>
        <member name="T:Avalonia.Win32.OpenGl.WglGdiResourceManager">
             <summary>
             - ReleaseDC can only happen from the same thread that has called GetDC
             - When thread exits all of its windows and HDCs are getting destroyed
             - We need to create OpenGL context (require a window and an HDC) and render targets (require an HDC) from thread pool threads
            
             So this class hosts a dedicated thread for managing offscreen windows and HDCs for OpenGL
             </summary>
        </member>
        <member name="P:Avalonia.Win32.ScreenImpl.ScreenCount">
            <inheritdoc />
        </member>
        <member name="P:Avalonia.Win32.ScreenImpl.AllScreens">
            <inheritdoc />
        </member>
        <member name="M:Avalonia.Win32.ScreenImpl.ScreenFromWindow(Avalonia.Platform.IWindowBaseImpl)">
            <inheritdoc />
        </member>
        <member name="M:Avalonia.Win32.ScreenImpl.ScreenFromPoint(Avalonia.PixelPoint)">
            <inheritdoc />
        </member>
        <member name="M:Avalonia.Win32.ScreenImpl.ScreenFromRect(Avalonia.PixelRect)">
            <inheritdoc />
        </member>
        <member name="M:Avalonia.Win32.TrayIconImpl.SetIcon(Avalonia.Platform.IWindowIconImpl)">
            <inheritdoc />
        </member>
        <member name="M:Avalonia.Win32.TrayIconImpl.SetIsVisible(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Avalonia.Win32.TrayIconImpl.SetToolTipText(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Avalonia.Win32.TrayIconImpl.CustomWindowsMessage">
            <summary>
            Custom Win32 window messages for the NotifyIcon
            </summary>
        </member>
        <member name="P:Avalonia.Win32.Win32Platform.WindowsVersion">
            <summary>
            Gets the actual WindowsVersion. Same as the info returned from RtlGetVersion.
            </summary>
        </member>
        <member name="T:Avalonia.Win32.WindowImpl">
            <summary>
            Window implementation for Win32 platform.
            </summary>
        </member>
        <member name="M:Avalonia.Win32.WindowImpl.SetFullScreen(System.Boolean)">
            <summary>
            Ported from https://github.com/chromium/chromium/blob/master/ui/views/win/fullscreen_handler.cc
            Method must only be called from inside UpdateWindowProperties.
            </summary>
            <param name="fullscreen"></param>
        </member>
        <member name="M:Avalonia.Win32.WindowImpl.SetExtendClientAreaTitleBarHeightHint(System.Double)">
            <inheritdoc/>
        </member>
        <member name="P:Avalonia.Win32.WindowImpl.IsClientAreaExtendedToDecorations">
            <inheritdoc/>
        </member>
        <member name="P:Avalonia.Win32.WindowImpl.ExtendClientAreaToDecorationsChanged">
            <inheritdoc/>
        </member>
        <member name="P:Avalonia.Win32.WindowImpl.NeedsManagedDecorations">
            <inheritdoc/>
        </member>
        <member name="P:Avalonia.Win32.WindowImpl.ExtendedMargins">
            <inheritdoc/>
        </member>
        <member name="P:Avalonia.Win32.WindowImpl.OffScreenMargin">
            <inheritdoc/>
        </member>
        <member name="P:Avalonia.Win32.WindowImpl.AcrylicCompensationLevels">
            <inheritdoc/>
        </member>
        <member name="M:Avalonia.Win32.WinScreen.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Avalonia.Win32.WinScreen.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Avalonia.Win32RenderingMode">
            <summary>
            Represents the rendering mode for platform graphics.
            </summary>
        </member>
        <member name="F:Avalonia.Win32RenderingMode.Software">
            <summary>
            Avalonia is rendered into a framebuffer.
            </summary>
        </member>
        <member name="F:Avalonia.Win32RenderingMode.AngleEgl">
            <summary>
            Enables ANGLE EGL for Windows with GPU rendering.
            </summary>
        </member>
        <member name="F:Avalonia.Win32RenderingMode.Wgl">
            <summary>
            Avalonia would try to use native Widows OpenGL with GPU rendering.
            </summary>
        </member>
        <member name="T:Avalonia.Win32CompositionMode">
            <summary>
            Represents the Win32 window composition mode.
            </summary>
        </member>
        <member name="F:Avalonia.Win32CompositionMode.WinUIComposition">
            <summary>
            Render Avalonia to a texture inside the Windows.UI.Composition tree.
            </summary>
            <remarks>
            Supported on Windows 10 build 17134 and above. Ignored on other versions.
            This is recommended option, as it allows window acrylic effects and high refresh rate rendering.<br/>
            Can only be applied with <see cref="P:Avalonia.Win32PlatformOptions.RenderingMode"/>=<see cref="F:Avalonia.Win32RenderingMode.AngleEgl"/>.
            </remarks>
        </member>
        <member name="F:Avalonia.Win32CompositionMode.LowLatencyDxgiSwapChain">
            <summary>
            When <see cref="F:Avalonia.Win32CompositionMode.LowLatencyDxgiSwapChain"/> is active, renders Avalonia through a low-latency Dxgi Swapchain.
            </summary>
            <remarks>
            Requires Feature Level 11_3 to be active, Windows 8.1+ Any Subversion. 
            This is only recommended if low input latency is desirable, and there is no need for the transparency
            and styling / blurring offered by <see cref="F:Avalonia.Win32CompositionMode.WinUIComposition"/>.<br/>
            Can only be applied with <see cref="P:Avalonia.Win32PlatformOptions.RenderingMode"/>=<see cref="F:Avalonia.Win32RenderingMode.AngleEgl"/>.
            </remarks>
        </member>
        <member name="F:Avalonia.Win32CompositionMode.RedirectionSurface">
            <summary>
            The window renders to a redirection surface.
            </summary>
            <remarks>
            This option is kept only for compatibility with older systems. Some Avalonia features might not work.
            </remarks>
        </member>
        <member name="T:Avalonia.Win32PlatformOptions">
            <summary>
            Platform-specific options which apply to Windows.
            </summary>
        </member>
        <member name="P:Avalonia.Win32PlatformOptions.OverlayPopups">
            <summary>
            Embeds popups to the window when set to true. The default value is false.
            </summary>
        </member>
        <member name="P:Avalonia.Win32PlatformOptions.RenderingMode">
            <summary>
            Gets or sets Avalonia rendering modes with fallbacks.
            The first element in the array has the highest priority.
            The default value is: <see cref="F:Avalonia.Win32RenderingMode.AngleEgl"/>, <see cref="F:Avalonia.Win32RenderingMode.Software"/>.
            </summary>
            <remarks>
            If application should work on as wide range of devices as possible, at least add <see cref="F:Avalonia.Win32RenderingMode.Software"/> as a fallback value.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if no values were matched.</exception>
        </member>
        <member name="P:Avalonia.Win32PlatformOptions.CompositionMode">
            <summary>
            Gets or sets Avalonia composition modes with fallbacks.
            The first element in the array has the highest priority.
            The default value is: <see cref="F:Avalonia.Win32CompositionMode.WinUIComposition"/>, <see cref="F:Avalonia.Win32CompositionMode.RedirectionSurface"/>.
            </summary>
            <remarks>
            If application should work on as wide range of devices as possible, at least add <see cref="F:Avalonia.Win32CompositionMode.RedirectionSurface"/> as a fallback value.
            </remarks>
            <exception cref="T:System.InvalidOperationException">Thrown if no values were matched.</exception>
        </member>
        <member name="P:Avalonia.Win32PlatformOptions.WinUICompositionBackdropCornerRadius">
            <summary>
            When <see cref="P:Avalonia.Win32PlatformOptions.CompositionMode"/> is set to <see cref="F:Avalonia.Win32CompositionMode.WinUIComposition"/>, create rounded corner blur brushes
            If set to null the brushes will be created using default settings (sharp corners)
            This can be useful when you need a rounded-corner blurred Windows 10 app, or borderless Windows 11 app.
            </summary>
        </member>
        <member name="P:Avalonia.Win32PlatformOptions.ShouldRenderOnUIThread">
            <summary>
            Render directly on the UI thread instead of using a dedicated render thread.
            Only applicable if <see cref="P:Avalonia.Win32PlatformOptions.CompositionMode"/> is set to <see cref="F:Avalonia.Win32CompositionMode.RedirectionSurface"/>.
            This setting is only recommended for interop with systems that must render on the UI thread, such as WPF.
            This setting is false by default.
            </summary>
        </member>
        <member name="P:Avalonia.Win32PlatformOptions.WglProfiles">
            <summary>
            Windows OpenGL profiles used when <see cref="P:Avalonia.Win32PlatformOptions.RenderingMode"/> is set to <see cref="F:Avalonia.Win32RenderingMode.Wgl"/>.
            This setting is 4.0 and 3.2 by default.
            </summary>
        </member>
        <member name="P:Avalonia.Win32PlatformOptions.CustomPlatformGraphics">
            <summary>
            Provides a way to use a custom-implemented graphics context such as a custom ISkiaGpu.
            When this property set <see cref="P:Avalonia.Win32PlatformOptions.RenderingMode"/> is ignored
            and <see cref="P:Avalonia.Win32PlatformOptions.CompositionMode"/> only accepts null or <see cref="F:Avalonia.Win32CompositionMode.RedirectionSurface"/>.
            </summary>
        </member>
    </members>
</doc>
